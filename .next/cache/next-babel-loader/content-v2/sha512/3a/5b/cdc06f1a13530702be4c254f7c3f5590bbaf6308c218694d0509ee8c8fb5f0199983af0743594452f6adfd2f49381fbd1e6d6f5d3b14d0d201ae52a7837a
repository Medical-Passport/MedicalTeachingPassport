{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lourdes\\\\Documents\\\\MedicalTeachingPassport\\\\pages\\\\index.js\";\nimport React from 'react';\nimport renderer from 'react-test-renderer';\nimport Bar from '../src/Bar';\nit('should render a basic bar chart', () => {\n  const component = renderer.create( /*#__PURE__*/_jsxDEV(Bar, {\n    width: 500,\n    height: 300,\n    data: [{\n      id: 'one',\n      value: 10\n    }, {\n      id: 'two',\n      value: 20\n    }, {\n      id: 'three',\n      value: 30\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this));\n  let tree = component.toJSON();\n  expect(tree).toMatchSnapshot();\n});\nit('should allow to disable labels', () => {\n  const component = renderer.create( /*#__PURE__*/_jsxDEV(Bar, {\n    width: 500,\n    height: 300,\n    enableLabel: false,\n    data: [{\n      id: 'one',\n      value: 10\n    }, {\n      id: 'two',\n      value: 20\n    }, {\n      id: 'three',\n      value: 30\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this));\n  let tree = component.toJSON();\n  expect(tree).toMatchSnapshot();\n});\nit('should allow grouped mode', () => {\n  const component = renderer.create( /*#__PURE__*/_jsxDEV(Bar, {\n    width: 500,\n    height: 300,\n    enableLabel: false,\n    groupMode: \"grouped\",\n    data: [{\n      id: 'one',\n      value: 10\n    }, {\n      id: 'two',\n      value: 20\n    }, {\n      id: 'three',\n      value: 30\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this));\n  let tree = component.toJSON();\n  expect(tree).toMatchSnapshot();\n});\nit('should allow horizontal layout', () => {\n  const component = renderer.create( /*#__PURE__*/_jsxDEV(Bar, {\n    width: 500,\n    height: 300,\n    enableLabel: false,\n    layout: \"horizontal\",\n    data: [{\n      id: 'one',\n      value: 10\n    }, {\n      id: 'two',\n      value: 20\n    }, {\n      id: 'three',\n      value: 30\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this));\n  let tree = component.toJSON();\n  expect(tree).toMatchSnapshot();\n});\nit('should allow grouped horizontal layout', () => {\n  const component = renderer.create( /*#__PURE__*/_jsxDEV(Bar, {\n    width: 500,\n    height: 300,\n    enableLabel: false,\n    groupMode: \"grouped\",\n    layout: \"horizontal\",\n    data: [{\n      id: 'one',\n      value: 10\n    }, {\n      id: 'two',\n      value: 20\n    }, {\n      id: 'three',\n      value: 30\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this));\n  let tree = component.toJSON();\n  expect(tree).toMatchSnapshot();\n});","map":{"version":3,"sources":["C:/Users/Lourdes/Documents/MedicalTeachingPassport/pages/index.js"],"names":["React","renderer","Bar","it","component","create","id","value","tree","toJSON","expect","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport renderer from 'react-test-renderer'\r\nimport Bar from '../src/Bar'\r\n\r\nit('should render a basic bar chart', () => {\r\n    const component = renderer.create(\r\n        <Bar\r\n            width={500}\r\n            height={300}\r\n            data={[{ id: 'one', value: 10 }, { id: 'two', value: 20 }, { id: 'three', value: 30 }]}\r\n        />\r\n    )\r\n\r\n    let tree = component.toJSON()\r\n    expect(tree).toMatchSnapshot()\r\n})\r\n\r\nit('should allow to disable labels', () => {\r\n    const component = renderer.create(\r\n        <Bar\r\n            width={500}\r\n            height={300}\r\n            enableLabel={false}\r\n            data={[{ id: 'one', value: 10 }, { id: 'two', value: 20 }, { id: 'three', value: 30 }]}\r\n        />\r\n    )\r\n\r\n    let tree = component.toJSON()\r\n    expect(tree).toMatchSnapshot()\r\n})\r\n\r\nit('should allow grouped mode', () => {\r\n    const component = renderer.create(\r\n        <Bar\r\n            width={500}\r\n            height={300}\r\n            enableLabel={false}\r\n            groupMode=\"grouped\"\r\n            data={[{ id: 'one', value: 10 }, { id: 'two', value: 20 }, { id: 'three', value: 30 }]}\r\n        />\r\n    )\r\n\r\n    let tree = component.toJSON()\r\n    expect(tree).toMatchSnapshot()\r\n})\r\n\r\nit('should allow horizontal layout', () => {\r\n    const component = renderer.create(\r\n        <Bar\r\n            width={500}\r\n            height={300}\r\n            enableLabel={false}\r\n            layout=\"horizontal\"\r\n            data={[{ id: 'one', value: 10 }, { id: 'two', value: 20 }, { id: 'three', value: 30 }]}\r\n        />\r\n    )\r\n\r\n    let tree = component.toJSON()\r\n    expect(tree).toMatchSnapshot()\r\n})\r\n\r\nit('should allow grouped horizontal layout', () => {\r\n    const component = renderer.create(\r\n        <Bar\r\n            width={500}\r\n            height={300}\r\n            enableLabel={false}\r\n            groupMode=\"grouped\"\r\n            layout=\"horizontal\"\r\n            data={[{ id: 'one', value: 10 }, { id: 'two', value: 20 }, { id: 'three', value: 30 }]}\r\n        />\r\n    )\r\n\r\n    let tree = component.toJSON()\r\n    expect(tree).toMatchSnapshot()\r\n})"]},"metadata":{},"sourceType":"module"}
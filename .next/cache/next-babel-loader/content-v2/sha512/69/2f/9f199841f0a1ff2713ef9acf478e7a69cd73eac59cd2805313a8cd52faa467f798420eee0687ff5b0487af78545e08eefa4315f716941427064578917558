{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lourdes\\\\Documents\\\\MedicalTeachingPassport\\\\pages\\\\index.js\";\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\nimport { Action } from '../../reducers/TaskReducer';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.transparent\n  },\n  marked: {\n    textDecoration: 'line-through'\n  }\n}));\n\nconst TaskListComponent = () => {\n  const {\n    sortedTasks,\n    dispatch\n  } = useContext(TaskContext);\n  const classes = useStyles();\n\n  const onChecked = (id, isChecked) => {\n    dispatch({\n      type: Action.CHECK_TASK,\n      task: {\n        id,\n        isChecked\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: sortedTasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        role: undefined,\n        dense: true,\n        button: true,\n        onClick: () => {\n          onChecked(task.id, !task.isChecked);\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          children: !task.isChecked ? /*#__PURE__*/_jsxDEV(CropFreeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(LibraryAddCheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: task.description,\n          className: task.isChecked ? classes.marked : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"comments\",\n            onClick: () => {\n              dispatch({\n                type: Action.REMOVE_TASK,\n                id: task.id\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TaskListComponent;","map":{"version":3,"sources":["C:/Users/Lourdes/Documents/MedicalTeachingPassport/pages/index.js"],"names":["React","useContext","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","CropFreeIcon","DeleteOutlineIcon","LibraryAddCheckIcon","Action","useStyles","theme","root","width","backgroundColor","palette","background","transparent","marked","textDecoration","TaskListComponent","sortedTasks","dispatch","TaskContext","classes","onChecked","id","isChecked","type","CHECK_TASK","task","map","undefined","description","REMOVE_TASK"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AAEA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC;AAFxC,GAD+B;AAKrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,cAAc,EAAE;AADZ;AAL6B,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,iBAAiB,GAAG,MAAM;AAE5B,QAAM;AACFC,IAAAA,WADE;AAEFC,IAAAA;AAFE,MAGFvB,UAAU,CAACwB,WAAD,CAHd;AAKA,QAAMC,OAAO,GAAGd,SAAS,EAAzB;;AAEA,QAAMe,SAAS,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACjCL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEnB,MAAM,CAACoB,UADR;AAELC,MAAAA,IAAI,EAAE;AACFJ,QAAAA,EADE;AAEFC,QAAAA;AAFE;AAFD,KAAD,CAAR;AAOH,GARD;;AASA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,OAAO,CAACZ,IAAzB;AAAA,cACKS,WAAW,CAACU,GAAZ,CAAiBD,IAAD,IAAU;AACvB,0BACI,QAAC,QAAD;AACI,QAAA,IAAI,EAAEE,SADV;AAEI,QAAA,KAAK,MAFT;AAGI,QAAA,MAAM,MAHV;AAII,QAAA,OAAO,EAAE,MAAM;AACXP,UAAAA,SAAS,CAACK,IAAI,CAACJ,EAAN,EAAU,CAACI,IAAI,CAACH,SAAhB,CAAT;AACH,SANL;AAAA,gCAQI,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,SAAlB;AAAA,oBAEQ,CAACG,IAAI,CAACH,SAAN,gBAAmB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAAnB,gBAAwC,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAFhD;AAAA;AAAA;AAAA;AAAA,gBARJ,eAaI,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEG,IAAI,CAACG,WAA5B;AACI,UAAA,SAAS,EAAEH,IAAI,CAACH,SAAL,GAAiBH,OAAO,CAACN,MAAzB,GAAkC;AADjD;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAeI,QAAC,uBAAD;AAAA,iCACI,QAAC,UAAD;AACI,YAAA,IAAI,EAAC,KADT;AAEI,0BAAW,UAFf;AAGI,YAAA,OAAO,EAAE,MAAM;AACXI,cAAAA,QAAQ,CAAC;AACLM,gBAAAA,IAAI,EAAEnB,MAAM,CAACyB,WADR;AAELR,gBAAAA,EAAE,EAAEI,IAAI,CAACJ;AAFJ,eAAD,CAAR;AAIH,aARL;AAAA,mCASI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA,SAAeI,IAAI,CAACJ,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AA+BH,KAhCA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CAvDD;;AAyDA,eAAeN,iBAAf","sourcesContent":["import React, { useContext } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CropFreeIcon from '@material-ui/icons/CropFree';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\r\n\r\nimport { Action } from '../../reducers/TaskReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.transparent,\r\n    },\r\n    marked: {\r\n        textDecoration: 'line-through'\r\n    }\r\n}));\r\n\r\n\r\nconst TaskListComponent = () => {\r\n\r\n    const {\r\n        sortedTasks,\r\n        dispatch,\r\n    } = useContext(TaskContext)\r\n\r\n    const classes = useStyles();\r\n\r\n    const onChecked = (id, isChecked) => {\r\n        dispatch({\r\n            type: Action.CHECK_TASK,\r\n            task: {\r\n                id,\r\n                isChecked\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <List className={classes.root}>\r\n            {sortedTasks.map((task) => {\r\n                return (\r\n                    <ListItem key={task.id}\r\n                        role={undefined}\r\n                        dense\r\n                        button\r\n                        onClick={() => {\r\n                            onChecked(task.id, !task.isChecked)\r\n                        }\r\n                        }>\r\n                        <IconButton color=\"primary\">\r\n                            {\r\n                                !task.isChecked ? (<CropFreeIcon />) : (<LibraryAddCheckIcon />)\r\n                            }\r\n                        </IconButton>\r\n                        <ListItemText primary={task.description}\r\n                            className={task.isChecked ? classes.marked : ''} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"comments\"\r\n                                onClick={() => {\r\n                                    dispatch({\r\n                                        type: Action.REMOVE_TASK,\r\n                                        id: task.id\r\n                                    })\r\n                                }}>\r\n                                <DeleteOutlineIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default TaskListComponent;"]},"metadata":{},"sourceType":"module"}
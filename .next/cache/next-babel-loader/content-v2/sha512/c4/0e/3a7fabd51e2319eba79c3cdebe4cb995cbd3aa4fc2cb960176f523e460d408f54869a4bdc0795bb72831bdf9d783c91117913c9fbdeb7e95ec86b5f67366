{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lourdes\\\\Documents\\\\MedicalTeachingPassport\\\\pages\\\\index.js\";\nimport React, { useState } from 'react';\nimport { Fragment } from 'react';\nimport { List, ListItem, ListItemIcon, Checkbox, ListItemText, ListItemSecondaryAction, IconButton, TextField } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({});\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { AppBar, Toolbar, Paper, Grid, CssBaseline, Box, Typography } from '@material-ui/core';\nconst useStyles = makeStyles({\n  '@keyframes slideUp': {\n    from: {\n      transform: 'translate(0, 50%)',\n      opacity: 0\n    },\n    to: {\n      transform: 'translate(0, 0)',\n      opacity: 1\n    }\n  },\n  slideUpEffect: {\n    animationName: '$slideUp',\n    animationDuration: '.3s'\n  },\n  '@keyframes slideLeft': {\n    from: {\n      transform: 'translate(0, 0)',\n      opacity: 0.7\n    },\n    to: {\n      transform: 'translate(-100%, 0)',\n      opaicty: 0\n    }\n  },\n  slideLeftEffect: {\n    animationName: '$slideLeft',\n    animationDuration: '.4s'\n  }\n});\n\nconst TodoList = () => {\n  const classes = useStyles();\n  let inRef = null;\n  const {\n    0: idIndex,\n    1: setIdIndex\n  } = useState(3);\n  const {\n    0: todoList,\n    1: setTodoList\n  } = useState([]);\n\n  const toggleItem = value => () => {\n    const copy = [...todoList];\n    copy.forEach(e => {\n      if (e.id == value) e.checked = !e.checked;\n    });\n    setTodoList(copy);\n  };\n\n  const deleteRequestItem = value => () => {\n    const copy = [...todoList];\n    let removeItem = undefined;\n    copy.forEach(e => {\n      if (e.id == value) {\n        e.anim = true;\n        removeItem = e;\n      }\n    });\n    setTodoList(copy);\n    setTimeout(value => {\n      deleteItem(removeItem);\n    }, 300);\n  };\n\n  const deleteItem = value => {\n    const copy = [...todoList];\n    let index = copy.indexOf(value);\n\n    if (index != -1) {\n      copy.splice(index, 1);\n      setTodoList(copy);\n    }\n  };\n\n  const addItem = value => {\n    const data = {\n      id: idIndex,\n      checked: false,\n      text: inRef.value,\n      anim: false\n    };\n    setIdIndex(idIndex + 1);\n    const copy = [...todoList];\n    copy.push(data);\n    setTodoList(copy);\n    inRef.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: [todoList.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: toggleItem(value.id),\n          className: value.anim ? classes.slideLeftEffect : classes.slideUpEffect,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              disableRipple: true,\n              edge: \"start\",\n              checked: value.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: value.checked ? /*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(\"strike\", {\n                children: value.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this) : value.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: deleteRequestItem(value.id),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, value.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        disableRipple: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Add notes/to-do's\",\n          inputRef: ref => inRef = ref\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            onClick: addItem,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, 'input', true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/Lourdes/Documents/MedicalTeachingPassport/pages/index.js"],"names":["React","useState","Fragment","List","ListItem","ListItemIcon","Checkbox","ListItemText","ListItemSecondaryAction","IconButton","TextField","DeleteIcon","AddIcon","makeStyles","createMuiTheme","theme","MenuIcon","AppBar","Toolbar","Paper","Grid","CssBaseline","Box","Typography","useStyles","from","transform","opacity","to","slideUpEffect","animationName","animationDuration","opaicty","slideLeftEffect","TodoList","classes","inRef","idIndex","setIdIndex","todoList","setTodoList","toggleItem","value","copy","forEach","e","id","checked","deleteRequestItem","removeItem","undefined","anim","setTimeout","deleteItem","index","indexOf","splice","addItem","data","text","push","map","ref"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Fragment } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Checkbox,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nconst theme = createMuiTheme({});\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Paper,\r\n  Grid,\r\n  CssBaseline,\r\n  Box,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  '@keyframes slideUp': {\r\n    from: { transform: 'translate(0, 50%)', opacity: 0 },\r\n    to: { transform: 'translate(0, 0)', opacity: 1 },\r\n  },\r\n  slideUpEffect: {\r\n    animationName: '$slideUp',\r\n    animationDuration: '.3s',\r\n  },\r\n  '@keyframes slideLeft': {\r\n    from: { transform: 'translate(0, 0)', opacity: 0.7 },\r\n    to: { transform: 'translate(-100%, 0)', opaicty: 0 },\r\n  },\r\n  slideLeftEffect: {\r\n    animationName: '$slideLeft',\r\n    animationDuration: '.4s',\r\n  },\r\n});\r\n\r\nconst TodoList = () => {\r\n  const classes = useStyles();\r\n  let inRef = null;\r\n  const [idIndex, setIdIndex] = useState(3);\r\n  const [todoList, setTodoList] = useState([\r\n \r\n  ]);\r\n  const toggleItem = value => () => {\r\n    const copy = [...todoList];\r\n    copy.forEach(e => {\r\n      if (e.id == value) e.checked = !e.checked;\r\n    });\r\n    setTodoList(copy);\r\n  };\r\n  const deleteRequestItem = value => () => {\r\n    const copy = [...todoList];\r\n    let removeItem = undefined;\r\n    copy.forEach(e => {\r\n      if (e.id == value) {\r\n        e.anim = true;\r\n        removeItem = e;\r\n      }\r\n    });\r\n    setTodoList(copy);\r\n    setTimeout(value => {\r\n      deleteItem(removeItem);\r\n    }, 300);\r\n  };\r\n  const deleteItem = value => {\r\n    const copy = [...todoList];\r\n    let index = copy.indexOf(value);\r\n    if (index != -1) {\r\n      copy.splice(index, 1);\r\n      setTodoList(copy);\r\n    }\r\n  };\r\n  const addItem = value => {\r\n    const data = {\r\n      id: idIndex,\r\n      checked: false,\r\n      text: inRef.value,\r\n      anim: false,\r\n    };\r\n    setIdIndex(idIndex + 1);\r\n    const copy = [...todoList];\r\n    copy.push(data);\r\n    setTodoList(copy);\r\n    inRef.value = '';\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <List>\r\n        {todoList.map((value, index) => {\r\n          return (\r\n            <ListItem\r\n              key={value.id}\r\n              button\r\n              onClick={toggleItem(value.id)}\r\n              className={\r\n                value.anim ? classes.slideLeftEffect : classes.slideUpEffect\r\n              }>\r\n              <ListItemIcon>\r\n                <Checkbox disableRipple edge=\"start\" checked={value.checked} />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  value.checked ? (\r\n                    <b>\r\n                      <strike>{value.text}</strike>\r\n                    </b>\r\n                  ) : (\r\n                    value.text\r\n                  )\r\n                }\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" onClick={deleteRequestItem(value.id)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem key={'input'} button disableRipple>\r\n          <TextField\r\n            fullWidth={true}\r\n            label=\"Add notes/to-do's\"\r\n            inputRef={ref => (inRef = ref)}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" onClick={addItem}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}
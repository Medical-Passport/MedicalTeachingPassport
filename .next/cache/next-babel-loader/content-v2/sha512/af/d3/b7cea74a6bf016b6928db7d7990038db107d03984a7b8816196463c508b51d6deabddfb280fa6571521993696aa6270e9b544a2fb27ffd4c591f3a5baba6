{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lourdes\\\\Documents\\\\MedicalTeachingPassport\\\\pages\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nvar BarChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(BarChart, _React$Component);\n\n  var _super = _createSuper(BarChart);\n\n  function BarChart() {\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: [{\n        \"Names\": \"AD\",\n        \"hot dog\": 161,\n        \"hot dogColor\": \"hsl(299, 70%, 50%)\",\n        \"burger\": 17,\n        \"burgerColor\": \"hsl(152, 70%, 50%)\",\n        \"sandwich\": 91,\n        \"sandwichColor\": \"hsl(177, 70%, 50%)\",\n        \"kebab\": 3,\n        \"kebabColor\": \"hsl(172, 70%, 50%)\",\n        \"fries\": 135,\n        \"friesColor\": \"hsl(171, 70%, 50%)\",\n        \"donut\": 124,\n        \"donutColor\": \"hsl(290, 70%, 50%)\"\n      }, {\n        \"Names\": \"AE\",\n        \"hot dog\": 91,\n        \"hot dogColor\": \"hsl(281, 70%, 50%)\",\n        \"burger\": 145,\n        \"burgerColor\": \"hsl(275, 70%, 50%)\",\n        \"sandwich\": 168,\n        \"sandwichColor\": \"hsl(40, 70%, 50%)\",\n        \"kebab\": 153,\n        \"kebabColor\": \"hsl(304, 70%, 50%)\",\n        \"fries\": 126,\n        \"friesColor\": \"hsl(174, 70%, 50%)\",\n        \"donut\": 189,\n        \"donutColor\": \"hsl(142, 70%, 50%)\"\n      }, {\n        \"Names\": \"AF\",\n        \"hot dog\": 121,\n        \"hot dogColor\": \"hsl(60, 70%, 50%)\",\n        \"burger\": 112,\n        \"burgerColor\": \"hsl(101, 70%, 50%)\",\n        \"sandwich\": 83,\n        \"sandwichColor\": \"hsl(1, 70%, 50%)\",\n        \"kebab\": 34,\n        \"kebabColor\": \"hsl(142, 70%, 50%)\",\n        \"fries\": 123,\n        \"friesColor\": \"hsl(74, 70%, 50%)\",\n        \"donut\": 80,\n        \"donutColor\": \"hsl(298, 70%, 50%)\"\n      }, {\n        \"Names\": \"AG\",\n        \"hot dog\": 138,\n        \"hot dogColor\": \"hsl(356, 70%, 50%)\",\n        \"burger\": 51,\n        \"burgerColor\": \"hsl(77, 70%, 50%)\",\n        \"sandwich\": 158,\n        \"sandwichColor\": \"hsl(359, 70%, 50%)\",\n        \"kebab\": 161,\n        \"kebabColor\": \"hsl(176, 70%, 50%)\",\n        \"fries\": 55,\n        \"friesColor\": \"hsl(81, 70%, 50%)\",\n        \"donut\": 81,\n        \"donutColor\": \"hsl(306, 70%, 50%)\"\n      }, {\n        \"Names\": \"AI\",\n        \"hot dog\": 146,\n        \"hot dogColor\": \"hsl(22, 70%, 50%)\",\n        \"burger\": 36,\n        \"burgerColor\": \"hsl(339, 70%, 50%)\",\n        \"sandwich\": 175,\n        \"sandwichColor\": \"hsl(282, 70%, 50%)\",\n        \"kebab\": 106,\n        \"kebabColor\": \"hsl(163, 70%, 50%)\",\n        \"fries\": 185,\n        \"friesColor\": \"hsl(105, 70%, 50%)\",\n        \"donut\": 12,\n        \"donutColor\": \"hsl(72, 70%, 50%)\"\n      }, {\n        \"Names\": \"AL\",\n        \"hot dog\": 115,\n        \"hot dogColor\": \"hsl(323, 70%, 50%)\",\n        \"burger\": 142,\n        \"burgerColor\": \"hsl(232, 70%, 50%)\",\n        \"sandwich\": 168,\n        \"sandwichColor\": \"hsl(162, 70%, 50%)\",\n        \"kebab\": 62,\n        \"kebabColor\": \"hsl(33, 70%, 50%)\",\n        \"fries\": 70,\n        \"friesColor\": \"hsl(3, 70%, 50%)\",\n        \"donut\": 15,\n        \"donutColor\": \"hsl(84, 70%, 50%)\"\n      }, {\n        \"Names\": \"AM\",\n        \"hot dog\": 11,\n        \"hot dogColor\": \"hsl(164, 70%, 50%)\",\n        \"burger\": 95,\n        \"burgerColor\": \"hsl(38, 70%, 50%)\",\n        \"sandwich\": 115,\n        \"sandwichColor\": \"hsl(25, 70%, 50%)\",\n        \"kebab\": 38,\n        \"kebabColor\": \"hsl(133, 70%, 50%)\",\n        \"fries\": 164,\n        \"friesColor\": \"hsl(87, 70%, 50%)\",\n        \"donut\": 131,\n        \"donutColor\": \"hsl(51, 70%, 50%)\"\n      }]\n    });\n\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      console.log('props', props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(ResponsiveBar, {\n          data: data,\n          keys: ['hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut'],\n          indexBy: \"Names\",\n          margin: {\n            top: 50,\n            right: 130,\n            bottom: 50,\n            left: 60\n          },\n          padding: 0.3,\n          valueScale: {\n            type: 'linear'\n          },\n          indexScale: {\n            type: 'band',\n            round: true\n          },\n          colors: {\n            scheme: 'nivo'\n          },\n          defs: [{\n            id: 'dots',\n            type: 'patternDots',\n            background: 'inherit',\n            color: '#38bcb2',\n            size: 4,\n            padding: 1,\n            stagger: true\n          }, {\n            id: 'lines',\n            type: 'patternLines',\n            background: 'inherit',\n            color: '#eed312',\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10\n          }],\n          fill: [{\n            match: {\n              id: 'fries'\n            },\n            id: 'dots'\n          }, {\n            match: {\n              id: 'sandwich'\n            },\n            id: 'lines'\n          }],\n          borderColor: {\n            from: 'color',\n            modifiers: [['darker', 1.6]]\n          },\n          axisTop: null,\n          axisRight: null,\n          axisBottom: {\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Names',\n            legendPosition: 'middle',\n            legendOffset: 32\n          },\n          axisLeft: {\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Percent complete',\n            legendPosition: 'middle',\n            legendOffset: -40\n          },\n          labelSkipWidth: 12,\n          labelSkipHeight: 12,\n          labelTextColor: {\n            from: 'color',\n            modifiers: [['darker', 1.6]]\n          },\n          legends: [{\n            dataFrom: 'keys',\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 120,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemWidth: 100,\n            itemHeight: 20,\n            itemDirection: 'left-to-right',\n            itemOpacity: 0.85,\n            symbolSize: 20,\n            effects: [{\n              on: 'hover',\n              style: {\n                itemOpacity: 1\n              }\n            }]\n          }],\n          animate: true,\n          motionStiffness: 90,\n          motionDamping: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"Default\",\n            children: \"Email to fill out passport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"Default\",\n            children: \"Email that component is overdue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return BarChart;\n}(React.Component);\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Users/Lourdes/Documents/MedicalTeachingPassport/pages/index.js"],"names":["React","ResponsiveBar","Button","Grid","BarChart","data","props","console","log","state","height","top","right","bottom","left","type","round","scheme","id","background","color","size","padding","stagger","rotation","lineWidth","spacing","match","from","modifiers","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ResponsiveBar } from '@nivo/bar'\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nclass BarChart extends React.Component {\r\n    state = {\r\n        data: [{\r\n          \"Names\": \"AD\",\r\n          \"hot dog\": 161,\r\n          \"hot dogColor\": \"hsl(299, 70%, 50%)\",\r\n          \"burger\": 17,\r\n          \"burgerColor\": \"hsl(152, 70%, 50%)\",\r\n          \"sandwich\": 91,\r\n          \"sandwichColor\": \"hsl(177, 70%, 50%)\",\r\n          \"kebab\": 3,\r\n          \"kebabColor\": \"hsl(172, 70%, 50%)\",\r\n          \"fries\": 135,\r\n          \"friesColor\": \"hsl(171, 70%, 50%)\",\r\n          \"donut\": 124,\r\n          \"donutColor\": \"hsl(290, 70%, 50%)\"\r\n        },\r\n        {\r\n          \"Names\": \"AE\",\r\n          \"hot dog\": 91,\r\n          \"hot dogColor\": \"hsl(281, 70%, 50%)\",\r\n          \"burger\": 145,\r\n          \"burgerColor\": \"hsl(275, 70%, 50%)\",\r\n          \"sandwich\": 168,\r\n          \"sandwichColor\": \"hsl(40, 70%, 50%)\",\r\n          \"kebab\": 153,\r\n          \"kebabColor\": \"hsl(304, 70%, 50%)\",\r\n          \"fries\": 126,\r\n          \"friesColor\": \"hsl(174, 70%, 50%)\",\r\n          \"donut\": 189,\r\n          \"donutColor\": \"hsl(142, 70%, 50%)\"\r\n        },\r\n        {\r\n          \"Names\": \"AF\",\r\n          \"hot dog\": 121,\r\n          \"hot dogColor\": \"hsl(60, 70%, 50%)\",\r\n          \"burger\": 112,\r\n          \"burgerColor\": \"hsl(101, 70%, 50%)\",\r\n          \"sandwich\": 83,\r\n          \"sandwichColor\": \"hsl(1, 70%, 50%)\",\r\n          \"kebab\": 34,\r\n          \"kebabColor\": \"hsl(142, 70%, 50%)\",\r\n          \"fries\": 123,\r\n          \"friesColor\": \"hsl(74, 70%, 50%)\",\r\n          \"donut\": 80,\r\n          \"donutColor\": \"hsl(298, 70%, 50%)\"\r\n        },\r\n        {\r\n          \"Names\": \"AG\",\r\n          \"hot dog\": 138,\r\n          \"hot dogColor\": \"hsl(356, 70%, 50%)\",\r\n          \"burger\": 51,\r\n          \"burgerColor\": \"hsl(77, 70%, 50%)\",\r\n          \"sandwich\": 158,\r\n          \"sandwichColor\": \"hsl(359, 70%, 50%)\",\r\n          \"kebab\": 161,\r\n          \"kebabColor\": \"hsl(176, 70%, 50%)\",\r\n          \"fries\": 55,\r\n          \"friesColor\": \"hsl(81, 70%, 50%)\",\r\n          \"donut\": 81,\r\n          \"donutColor\": \"hsl(306, 70%, 50%)\"\r\n        },\r\n        {\r\n          \"Names\": \"AI\",\r\n          \"hot dog\": 146,\r\n          \"hot dogColor\": \"hsl(22, 70%, 50%)\",\r\n          \"burger\": 36,\r\n          \"burgerColor\": \"hsl(339, 70%, 50%)\",\r\n          \"sandwich\": 175,\r\n          \"sandwichColor\": \"hsl(282, 70%, 50%)\",\r\n          \"kebab\": 106,\r\n          \"kebabColor\": \"hsl(163, 70%, 50%)\",\r\n          \"fries\": 185,\r\n          \"friesColor\": \"hsl(105, 70%, 50%)\",\r\n          \"donut\": 12,\r\n          \"donutColor\": \"hsl(72, 70%, 50%)\"\r\n        },\r\n        {\r\n          \"Names\": \"AL\",\r\n          \"hot dog\": 115,\r\n          \"hot dogColor\": \"hsl(323, 70%, 50%)\",\r\n          \"burger\": 142,\r\n          \"burgerColor\": \"hsl(232, 70%, 50%)\",\r\n          \"sandwich\": 168,\r\n          \"sandwichColor\": \"hsl(162, 70%, 50%)\",\r\n          \"kebab\": 62,\r\n          \"kebabColor\": \"hsl(33, 70%, 50%)\",\r\n          \"fries\": 70,\r\n          \"friesColor\": \"hsl(3, 70%, 50%)\",\r\n          \"donut\": 15,\r\n          \"donutColor\": \"hsl(84, 70%, 50%)\"\r\n        },\r\n        {\r\n          \"Names\": \"AM\",\r\n          \"hot dog\": 11,\r\n          \"hot dogColor\": \"hsl(164, 70%, 50%)\",\r\n          \"burger\": 95,\r\n          \"burgerColor\": \"hsl(38, 70%, 50%)\",\r\n          \"sandwich\": 115,\r\n          \"sandwichColor\": \"hsl(25, 70%, 50%)\",\r\n          \"kebab\": 38,\r\n          \"kebabColor\": \"hsl(133, 70%, 50%)\",\r\n          \"fries\": 164,\r\n          \"friesColor\": \"hsl(87, 70%, 50%)\",\r\n          \"donut\": 131,\r\n          \"donutColor\": \"hsl(51, 70%, 50%)\"\r\n        }\r\n        ]\r\n    }\r\n  \r\n    componentWillReceiveProps(props) {\r\n        console.log('props',props)\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state\r\n    return (\r\n        <div style={{height:600}}>\r\n\r\n        <ResponsiveBar\r\n         data={data}\r\n         keys={[ 'hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut' ]}\r\n         indexBy=\"Names\"\r\n         margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n         padding={0.3}\r\n         valueScale={{ type: 'linear' }}\r\n         indexScale={{ type: 'band', round: true }}\r\n         colors={{ scheme: 'nivo' }}\r\n        defs={[\r\n          {\r\n              id: 'dots',\r\n              type: 'patternDots',\r\n              background: 'inherit',\r\n              color: '#38bcb2',\r\n              size: 4,\r\n              padding: 1,\r\n              stagger: true\r\n          },\r\n          {\r\n              id: 'lines',\r\n              type: 'patternLines',\r\n              background: 'inherit',\r\n              color: '#eed312',\r\n              rotation: -45,\r\n              lineWidth: 6,\r\n              spacing: 10\r\n          }\r\n      ]}\r\n      fill={[\r\n          {\r\n              match: {\r\n                  id: 'fries'\r\n              },\r\n              id: 'dots'\r\n          },\r\n          {\r\n              match: {\r\n                  id: 'sandwich'\r\n              },\r\n              id: 'lines'\r\n          }\r\n      ]}\r\n      borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n      axisTop={null}\r\n      axisRight={null}\r\n      axisBottom={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: 'Names',\r\n          legendPosition: 'middle',\r\n          legendOffset: 32\r\n      }}\r\n      axisLeft={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: 'Percent complete',\r\n          legendPosition: 'middle',\r\n          legendOffset: -40\r\n      }}\r\n      labelSkipWidth={12}\r\n      labelSkipHeight={12}\r\n      labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n      legends={[\r\n          {\r\n              dataFrom: 'keys',\r\n              anchor: 'bottom-right',\r\n              direction: 'column',\r\n              justify: false,\r\n              translateX: 120,\r\n              translateY: 0,\r\n              itemsSpacing: 2,\r\n              itemWidth: 100,\r\n              itemHeight: 20,\r\n              itemDirection: 'left-to-right',\r\n              itemOpacity: 0.85,\r\n              symbolSize: 20,\r\n              effects: [\r\n                  {\r\n                      on: 'hover',\r\n                      style: {\r\n                          itemOpacity: 1\r\n                      }\r\n                  }\r\n              ]\r\n          }\r\n      ]}\r\n      animate={true}\r\n      motionStiffness={90}\r\n      motionDamping={15}\r\n  />\r\n  <Grid container justify=\"center\">\r\n  <Button variant=\"contained\" color=\"Default\">\r\n  Email to fill out passport\r\n</Button>\r\n<Button variant=\"contained\" color=\"Default\">\r\n  Email that component is overdue\r\n</Button>\r\n</Grid>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}